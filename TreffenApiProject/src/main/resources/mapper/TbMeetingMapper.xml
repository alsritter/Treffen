<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alsritter.treffen.mapper.TbMeetingMapper">
  <resultMap id="BaseResultMap" type="com.alsritter.treffen.entity.TbMeeting">
    <id column="meeting_id" jdbcType="INTEGER" property="meetingId" />
    <result column="host_id" jdbcType="INTEGER" property="hostId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="record_desc" jdbcType="VARCHAR" property="recordDesc" />
    <result column="record_type" jdbcType="VARCHAR" property="recordType" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    meeting_id, host_id, start_time, end_time, record_desc, record_type, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_meeting
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_meeting
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="meeting_id" keyProperty="meetingId" parameterType="com.alsritter.treffen.entity.TbMeeting" useGeneratedKeys="true">
    insert into tb_meeting (host_id, start_time, end_time, 
      record_desc, record_type, is_deleted
      )
    values (#{hostId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{recordDesc,jdbcType=VARCHAR}, #{recordType,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="meeting_id" keyProperty="meetingId" parameterType="com.alsritter.treffen.entity.TbMeeting" useGeneratedKeys="true">
    insert into tb_meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        host_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="recordDesc != null">
        record_desc,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        #{hostId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordDesc != null">
        #{recordDesc,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alsritter.treffen.entity.TbMeeting">
    update tb_meeting
    <set>
      <if test="hostId != null">
        host_id = #{hostId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordDesc != null">
        record_desc = #{recordDesc,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alsritter.treffen.entity.TbMeeting">
    update tb_meeting
    set host_id = #{hostId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      record_desc = #{recordDesc,jdbcType=VARCHAR},
      record_type = #{recordType,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </update>
</mapper>